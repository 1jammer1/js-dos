(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{67:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return s})),r.d(t,"rightToc",(function(){return c})),r.d(t,"default",(function(){return p}));var n=r(2),a=r(6),o=(r(0),r(74)),i={id:"estimating-performance",title:"Esitmating emulators performance"},s={unversionedId:"estimating-performance",id:"estimating-performance",isDocsHomePage:!1,title:"Esitmating emulators performance",description:"Performance testing",source:"@site/docs/estimating-performance.md",permalink:"/v7/build/docs/estimating-performance",editUrl:"https://github.com/caiiiycuk/js-dos/edit/gh-pages/v7/docs/estimating-performance.md",sidebar:"someSidebar",previous:{title:"Three.js",permalink:"/v7/build/docs/threejs"},next:{title:"Contributing",permalink:"/v7/build/docs/contributing-emulators"}},c=[{value:"Performance testing",id:"performance-testing",children:[]},{value:"Running the test",id:"running-the-test",children:[]},{value:"Implementing the test",id:"implementing-the-test",children:[]}],l={rightToc:c};function p(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"performance-testing"},"Performance testing"),Object(o.b)("p",null,"To measure performance we used variant of Dhrystone 2 Test originally taken from this ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"http://www.roylongbottom.org.uk/dhrystone%20results.htm"}),"page"),". Original version used ",Object(o.b)("inlineCode",{parentName:"p"},"clock()")," to calculate delta time. Which is good for real pc, but does not very accurate for dosbox emulator. When ",Object(o.b)("inlineCode",{parentName:"p"},"clock()")," call happened modified version send ",Object(o.b)("inlineCode",{parentName:"p"},"~>dtime")," marker to stdout which intercepted by test page and used to calculate delta time with ",Object(o.b)("inlineCode",{parentName:"p"},"performance.now()")," from browser. Source code of modified test is ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/caiiiycuk/js-dos/tree/6.22/programms/dhry2"}),"here"),"."),Object(o.b)("p",null,"Basically this test produce a lot of int operations and measure amount of operations (Dhrystones) produced per second. Output is a ",Object(o.b)("inlineCode",{parentName:"p"},"VAX MIPS RATING")," which is Drhystones per second divided by 1757 (is as DEC VAX 11/780 result)."),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"js-dos bundle")," with this test can be found on ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://talks.dos.zone/t/dhrystone-2-test-jul-2020/37086"}),"Test")," page."),Object(o.b)("h2",{id:"running-the-test"},"Running the test"),Object(o.b)("p",null,"You can estimate performance of your device ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://dos.zone/en/eplayer/https%3A%2F%2Fdoszone-uploads.s3.dualstack.eu-central-1.amazonaws.com%2Foriginal%2F2X%2Fb%2Fb4b5275904d86a4ab8a20917b2b7e34f0df47bf7.jsdos"}),"here"),"."),Object(o.b)("h2",{id:"implementing-the-test"},"Implementing the test"),Object(o.b)("p",null,"To run this test we should use ",Object(o.b)("inlineCode",{parentName:"p"},"emulators.js")," (from emulators) and use our ",Object(o.b)("inlineCode",{parentName:"p"},"js-dos bundle")," to start test."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-html"}),'<script src="/v7/build/releases/latest/emulators/emulators.js"><\/script>\n// ...\n<script>\n  emulators.pathPrefix = "/v7/build/releases/latest/emulators/";\n')),Object(o.b)("p",null,"You can start test in worker or direct mode:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"// promise is resolved when emulator is started\nconst ci = await (options.worker ?\n  emulators.dosWorker(bundle) :\n  emulators.dosDirect(bundle));\n")),Object(o.b)("p",null,"In worker mode each test will run in new worker. If you press ",Object(o.b)("inlineCode",{parentName:"p"},"Start Worker")," multiple times,\nthen you will see output from multiple threads. In direct mode browser will probably hangs.\nIn theory direct mode is faster, but browser will be unstable. Our recomendation is to use worker\nmode all time."),Object(o.b)("p",null,"Complete example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-html",metastring:'title="examples/dhry2.html"',title:'"examples/dhry2.html"'}),"{}\n")))}p.isMDXComponent=!0},74:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return b}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=a.a.createContext({}),p=function(e){var t=a.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=p(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(r),d=n,b=u["".concat(i,".").concat(d)]||u[d]||m[d]||o;return r?a.a.createElement(b,s(s({ref:t},l),{},{components:r})):a.a.createElement(b,s({ref:t},l))}));function b(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);