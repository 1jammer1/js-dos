"use strict";(self.webpackChunkjs_dos=self.webpackChunkjs_dos||[]).push([[548],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return p}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=l(t),p=o,f=u["".concat(c,".").concat(p)]||u[p]||m[p]||a;return t?r.createElement(f,s(s({ref:n},d),{},{components:t})):r.createElement(f,s({ref:n},d))}));function p(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=u;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},6134:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return i},metadata:function(){return c},toc:function(){return l},default:function(){return m}});var r=t(4034),o=t(9973),a=(t(7294),t(3905)),s={id:"dosbox-direct",title:"DOSBOX Direct"},i=void 0,c={unversionedId:"dosbox-direct",id:"dosbox-direct",isDocsHomePage:!1,title:"DOSBOX Direct",description:"DOS Direct is an emulation backend based on dosbox, you can create it with following command:",source:"@site/docs/dosbox-direct.md",sourceDirName:".",slug:"/dosbox-direct",permalink:"/v7/build/docs/dosbox-direct",editUrl:"https://github.com/caiiiycuk/js-dos/edit/gh-pages/v7/docs/dosbox-direct.md",tags:[],version:"current",frontMatter:{id:"dosbox-direct",title:"DOSBOX Direct"},sidebar:"someSidebar",previous:{title:"Contributing in client-side features",permalink:"/v7/build/docs/contributing-emulators-ui"},next:{title:"DOSBOS Worker",permalink:"/v7/build/docs/dosbox-worker"}},l=[{value:"Accessing file system",id:"accessing-file-system",children:[]},{value:"Accessing memory",id:"accessing-memory",children:[]}],d={toc:l};function m(e){var n=e.components,t=(0,o.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"DOS Direct is an emulation backend based on dosbox, you can create it with following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const ci = await emulators.dosboxDirect(bundle);\n")),(0,a.kt)("p",null,"In theory the direct version is the fastest possible version of the emulator backend. But it has a strong disadvantage: it's working on the main browser thread. So it can easily hang a browser for some amount of time, and not be very responsive."),(0,a.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},(0,a.kt)("a",{parentName:"p",href:"/v7/build/docs/dosbox-worker"},"DOSBOX Worker")," is a more preferred version of the emulator backend, because it does not block the browser."))),(0,a.kt)("h3",{id:"accessing-file-system"},"Accessing file system"),(0,a.kt)("p",null,"In direct mode you can easily access emscripten module:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const ci = await emulators.dosboxDirect(bundle);\nci.transport.module // <-- emscripten module\n")),(0,a.kt)("p",null,"Emscripten module provide lowlevel api to change ",(0,a.kt)("a",{parentName:"p",href:"https://emscripten.org/docs/api_reference/Filesystem-API.html"},"file system"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const ci = await emulators.dosboxDirect(bundle);\nci.transport.module.FS // <-- emscripten FS api\n")),(0,a.kt)("p",null,"You can also rescan DOS devices:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const ci = await emulators.dosboxDirect(bundle);\nci.transport.module._rescanFilesystem();\n")),(0,a.kt)("h3",{id:"accessing-memory"},"Accessing memory"),(0,a.kt)("p",null,"In direct mode you can dump whole memory of dos:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const ci = await emulators.dosboxDirect(bundle);\nci.transport.module._dumpMemory(copyDosMemory);\nci.transport.module.memoryContents // <-- now you can access contents using this var\n")),(0,a.kt)("p",null,"If you need to copy entire memory pass ",(0,a.kt)("inlineCode",{parentName:"p"},"true")," as argument.\nThe ",(0,a.kt)("inlineCode",{parentName:"p"},"memoryContents")," contains following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'{\n        "memBase": ...,\n        "ip": ...,\n        "flags": ...,\n        "registers": {\n            "ax": ...,\n            "cx": ...,\n            "dx": ...,\n            "sp": ...,\n            "bp": ...,\n            "si": ...,\n            "di": ...\n        },\n        "segments_values": {\n            "es": ...,\n            "cs": ...,\n            "ss": ...,\n            "ds": ...,\n            "fs": ...,\n            "gs": ...\n        },\n        "segments_physical": {\n            "es": ...,\n            "cs": ...,\n            "ss": ...,\n            "ds": ...,\n            "fs": ...,\n            "gs": ...\n        },\n        "numPages": ...,\n        "memoryCopy": ...\n}\n')))}m.isMDXComponent=!0}}]);